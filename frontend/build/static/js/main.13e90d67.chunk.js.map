{"version":3,"sources":["pages/dataset/index.tsx","pages/labeling/data.ts","pages/labeling/api/index.ts","pages/labeling/index.tsx","logo.svg","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DatasetListView","className","labels","submit","uid","label","a","axios","put","headers","retrieve","get","retrieveSingle","groups_","LabelingView","useState","groups","setGroups","currentIndex","setCurrentIndex","setLabel","jumpInput","setJumpInput","instanceIdx","setInstanceIdx","useEffect","then","data","success","console","error","message","instance_groups","map","item","grp","instances","inst","file","push","length","catch","err","handleCheckboxChange","idx","event","label_tmp","target","checked","handleIncrement","num","page","isNaN","style","marginBottom","alt","src","onClick","element","type","name","Boolean","onChange","id","disabled","Array","from","keys","Math","min","max","filter","color","value","parseInt","Header","logo","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13e90d67.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\n\r\nconst DatasetListView: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"main-layout\">\r\n\t\t\t<h1>Dataset</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DatasetListView\r\n","import LabelingView from \".\";\r\n\r\nexport const labels: string[] = [\"线索细胞\", \"降解的线索细胞\", \"滴虫\", \"乳杆菌\", \"念珠菌\", \"白细胞\"]","import axios from 'axios'\r\n\r\nexport const submit = async (uid: string, label: number) => {\r\n\treturn await axios.put(`/api/v1/group/label/${uid}`, \r\n\t\t{\r\n\t\t\tlabel: label\r\n\t\t},\r\n\t\t{\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport const retrieve = async () => {\r\n    return await axios.get(\"/api/v1/group/info\")\r\n}\r\n\r\nexport const retrieveSingle = async (uid: string) => {\r\n\treturn await axios.get(`/api/v1/group/label/${uid}`)\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { labels } from './data'\r\nimport { submit, retrieve, retrieveSingle } from './api'\r\nimport './index.css'\r\nimport { group } from 'console'\r\n\r\ninterface IInstance {\r\n\tuid: string;\r\n\tfile: string;\r\n}\r\n\r\ninterface IGroup {\r\n\tuid: string;\r\n\tlabel: number,\r\n\tinstances: IInstance[];\r\n}\r\n\r\nconst groups_: IGroup[] = []\r\n\r\nconst LabelingView: React.FC = () => {\r\n\r\n\tconst [groups, setGroups] = useState(groups_)\r\n\tconst [currentIndex, setCurrentIndex] = useState(0)\r\n\tconst [label, setLabel] = useState(0);\r\n\tconst [jumpInput, setJumpInput] = useState(\"\");\r\n\tconst [instanceIdx, setInstanceIdx] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tretrieve()\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t\tconst instance_groups = data.data.map((item: any) => {\r\n\t\t\t\tconst grp: IGroup = {\r\n\t\t\t\t\tuid: item.uid,\r\n\t\t\t\t\tlabel: item.label,\r\n\t\t\t\t\tinstances: item.instances.map((inst: any) => {\r\n\t\t\t\t\t\tconst instance: IInstance = {\r\n\t\t\t\t\t\t\tuid: inst.uid,\r\n\t\t\t\t\t\t\tfile: inst.file,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn instance\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tinstance_groups.push(grp)\r\n\t\t\t})\r\n\t\t\tsetGroups(instance_groups)\r\n\t\t\tif(currentIndex < instance_groups.length)\r\n\t\t\t\tsetLabel(instance_groups[currentIndex].label || 0)\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(groups.length === 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst uid = groups[currentIndex].uid\r\n\t\tretrieveSingle(uid)\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t\tif(currentIndex < groups.length) {\r\n\t\t\t\tsetLabel(data.data.label)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}, [groups, currentIndex])\r\n\r\n\tconst handleCheckboxChange = (idx: number) => (event: any) => {\r\n\t\tconst label_tmp = label === null ? 0 : label\r\n\t\tif(event.target.checked)  setLabel(label_tmp | (1 << idx))\r\n\t\telse{\r\n\t\t\tsetLabel(label_tmp & (~(1 << idx)))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tif(currentIndex >= groups.length){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst uid = groups[currentIndex].uid\r\n\t\tsetLabel(0)\r\n\t\tsubmit(uid, 0)\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleSubmit = (event: any) => {\r\n\t\tif(currentIndex >= groups.length){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst uid = groups[currentIndex].uid\r\n\t\tsubmit(uid, label)\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleJumpInputChange = (event: any) => {\r\n\t\tsetJumpInput(event.target.value)\r\n\t}\r\n\r\n\tconst handleJumpClick = (event: any) => {\r\n\t\tconst page = parseInt(jumpInput)\r\n\t\tif(!isNaN(page) && page >= 0 && page < groups.length) {\r\n\t\t\tsetLabel(groups[page].label)\r\n\t\t\tsetCurrentIndex(page)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleIncrement = (num: number) => () => {\r\n\t\tconst page = currentIndex + num\r\n\t\tif(!isNaN(page) && page >= 0 && page < groups.length) {\r\n\t\t\tsetLabel(groups[page].label)\r\n\t\t\tsetCurrentIndex(page)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handlePageChange = (num: number) => () => {\r\n\t\tif(!isNaN(num) && num >= 0 && num < groups.length) {\r\n\t\t\tsetLabel(groups[num].label)\r\n\t\t\tsetCurrentIndex(num)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"main-layout\">\r\n\t\t\t<h1>Labeling</h1>\r\n\t\t\t<div className=\"instance\">\r\n\t\t\t\t<div className=\"instance-group\">\r\n\t\t\t\t\t{[0 , 1, 2, 3, 4, 5, 6, 7, 8, 9].map((item, idx) => (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tstyle={{marginBottom: 0}}\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t// instances[currentIndex] && \r\n\t\t\t\t\t\t\t\t\t// `/file/${instances[currentIndex].image}`\r\n\t\t\t\t\t\t\t\t\t\"/logo512.png\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() => {setInstanceIdx(idx)}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"instance-image\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt=\"\"\t\r\n\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t// groups[currentIndex] && groups[currentIndex].instances[instanceIdx] && \r\n\t\t\t\t\t\t\t// `/file/datasets/${instances[currentIndex].uid}/${groups[currentIndex].instances[instanceIdx].file}`\r\n\t\t\t\t\t\t\t\"/logo512.png\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t<div className=\"vertical-divider\"></div>\r\n\t\t\t\t\t<div className=\"instance-properties\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Group Uid:</h5>\r\n\t\t\t\t\t\t\t<p>{groups[currentIndex] && groups[currentIndex].uid}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Group Label:</h5>\r\n\t\t\t\t\t\t\t<p>{groups[currentIndex] && groups[currentIndex].label}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Image Uid:</h5>\r\n\t\t\t\t\t\t\t<p>{groups[currentIndex] && groups[currentIndex].instances[instanceIdx] && groups[currentIndex].instances[instanceIdx].uid}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Image File:</h5>\r\n\t\t\t\t\t\t\t<p>{groups[currentIndex] && groups[currentIndex].instances[instanceIdx] && groups[currentIndex].instances[instanceIdx].file}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"checkboxes\">\r\n\t\t\t\t{labels.map((element, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className=\"checkbox\">\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\t\t\tchecked={Boolean((label===null?0:label) & (1<<idx))}\r\n\t\t\t\t\t\t\t\tonChange={handleCheckboxChange(idx)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{element}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<button id=\"submit-button\" onClick={handleSubmit} disabled={label===null}>保存</button>\r\n\t\t\t<div className=\"paginator\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={handleIncrement(-1)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#10094;\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</span>\r\n\t\t\t\t{Array.from(Array(5).keys()).map(\r\n\t\t\t\t\titem => item + Math.min(groups.length-1-item, Math.max(currentIndex-2, 0))).filter(\r\n\t\t\t\t\t\titem => (item >= 0 && item < groups.length)\r\n\t\t\t\t\t\t).map((item, idx) => (\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={handlePageChange(item)} \r\n\t\t\t\t\t\t\tstyle={item===currentIndex ? {color: \"blue\"} : {}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t))}\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={handleIncrement(1)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#10095;\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span><button onClick={handleConfirm}>确认良性</button></span>\r\n\t\t\t\t<span></span>\r\n\t\t\t\t<span><input type=\"text\" value={jumpInput} onChange={handleJumpInputChange} /></span>\r\n\t\t\t\t<span><button onClick={handleJumpClick}>跳转</button></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LabelingView\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from '../../logo.svg'\r\nimport './index.css'\r\n\r\nconst Header: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"topbar\">\r\n\t\t\t<img src={logo} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport DatasetListView from './pages/dataset';\nimport LabelingView from './pages/labeling'\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <BrowserRouter>\n        <Route path=\"/dataset\" component={ DatasetListView } />\n        <Route path=\"/\" component={ LabelingView } />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}