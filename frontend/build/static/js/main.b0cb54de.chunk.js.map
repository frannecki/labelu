{"version":3,"sources":["pages/dataset/index.tsx","pages/labeling/data.ts","pages/labeling/api/index.ts","pages/labeling/index.tsx","logo.svg","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DatasetListView","className","labels","submit","uid","file","label","a","axios","put","headers","retrieve","get","retrieveSingle","filename","post","insts","LabelingView","useState","instances","setInstances","currentIndex","setCurrentIndex","setLabel","jumpInput","setJumpInput","useEffect","then","data","success","console","error","message","length","catch","err","handleCheckboxChange","idx","event","label_tmp","target","checked","handleIncrement","num","page","isNaN","src","image","map","element","type","name","Boolean","onChange","id","onClick","disabled","Array","from","keys","item","Math","min","max","filter","style","color","parseInt","value","Header","logo","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0cb54de.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\n\r\nconst DatasetListView: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"main-layout\">\r\n\t\t\t<h1>Dataset</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DatasetListView\r\n","import LabelingView from \".\";\r\n\r\nexport const labels: string[] = [\"线索细胞\", \"降解的线索细胞\", \"滴虫\", \"乳杆菌\", \"念珠菌\", \"白细胞\"]","import axios from 'axios'\r\n\r\nexport const submit = async (uid: string , file: string, label: number) => {\r\n\treturn await axios.put(\"/api/v1/instance/label\", \r\n\t\t{\r\n\t\t\tuid: uid,\r\n\t\t\tfile: file,\r\n\t\t\tlabel: label\r\n\t\t},\r\n\t\t{\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport const retrieve = async () => {\r\n    return await axios.get(\"/api/v1/instance/info\")\r\n}\r\n\r\nexport const retrieveSingle = async (uid: string, filename: string) => {\r\n\treturn await axios.post(\"/api/v1/instance/label\",\r\n\t\t{\r\n\t\t\tuid: uid,\r\n\t\t\tfile: filename,\r\n\t\t},\r\n\t\t{\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { labels } from './data'\r\nimport './index.css'\r\nimport { submit, retrieve, retrieveSingle } from './api'\r\n\r\ninterface IInstance {\r\n\tfile: string,\r\n\timage: string,\r\n\tlabel: number,\r\n\tuid: string\r\n}\r\n\r\nconst insts: IInstance[] = []\r\n\r\nconst LabelingView: React.FC = () => {\r\n\r\n\tconst [instances, setInstances] = useState(insts)\r\n\tconst [currentIndex, setCurrentIndex] = useState(0)\r\n\tconst [label, setLabel] = useState(0);\r\n\tconst [jumpInput, setJumpInput] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tretrieve()\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t\tsetInstances(data.data)\r\n\t\t\tif(currentIndex < instances.length)\r\n\t\t\t\tsetLabel(instances[currentIndex].label)\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(instances.length === 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst uid = instances[currentIndex].uid\r\n\t\tconst file = instances[currentIndex].file\r\n\t\tretrieveSingle(uid, file)\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t\tif(currentIndex < instances.length)\r\n\t\t\t\tsetLabel(data.data.label)\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}, [instances, currentIndex])\r\n\r\n\tconst handleCheckboxChange = (idx: number) => (event: any) => {\r\n\t\tconst label_tmp = label === null ? 0 : label\r\n\t\tif(event.target.checked)  setLabel(label_tmp | (1 << idx))\r\n\t\telse{\r\n\t\t\tsetLabel(label_tmp & (~(1 << idx)))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tif(currentIndex >= instances.length){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst uid = instances[currentIndex].uid\r\n\t\tconst file = instances[currentIndex].file\r\n\t\tsetLabel(0)\r\n\t\tsubmit(uid, file, 0)\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleSubmit = (event: any) => {\r\n\t\tif(currentIndex >= instances.length){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst uid = instances[currentIndex].uid\r\n\t\tconst file = instances[currentIndex].file\r\n\t\tsubmit(uid, file, label)\r\n\t\t.then(({ data }) => {\r\n\t\t\tif(!data.success) {\r\n\t\t\t\tconsole.error(data.message)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err)\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleJumpInputChange = (event: any) => {\r\n\t\tsetJumpInput(event.target.value)\r\n\t}\r\n\r\n\tconst handleJumpClick = (event: any) => {\r\n\t\tconst page = parseInt(jumpInput)\r\n\t\tif(!isNaN(page) && page >= 0 && page < instances.length) {\r\n\t\t\tsetLabel(instances[page].label)\r\n\t\t\tsetCurrentIndex(page)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleIncrement = (num: number) => (event: any) => {\r\n\t\tconst page = currentIndex + num\r\n\t\tif(!isNaN(page) && page >= 0 && page < instances.length) {\r\n\t\t\tsetLabel(instances[page].label)\r\n\t\t\tsetCurrentIndex(page)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handlePageChange = (num: number) => (event: any) => {\r\n\t\tif(!isNaN(num) && num >= 0 && num < instances.length) {\r\n\t\t\tsetLabel(instances[num].label)\r\n\t\t\tsetCurrentIndex(num)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"main-layout\">\r\n\t\t\t<h1>Labeling</h1>\r\n\t\t\t<div className=\"instance\">\r\n\t\t\t\t<div className=\"instance-image\">\r\n\t\t\t\t\t<img src={instances[currentIndex] && `/file/${instances[currentIndex].image}`} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"instance-image\">\r\n\t\t\t\t\t<img src={instances[currentIndex] && `/file/datasets/${instances[currentIndex].uid}/${instances[currentIndex].file}`} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t<div className=\"vertical-divider\"></div>\r\n\t\t\t\t\t<div className=\"instance-properties\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Image Uid:</h5>\r\n\t\t\t\t\t\t\t<p>{instances[currentIndex] && instances[currentIndex].uid}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Image File:</h5>\r\n\t\t\t\t\t\t\t<p>{instances[currentIndex] && instances[currentIndex].image}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Patch File:</h5>\r\n\t\t\t\t\t\t\t<p>{instances[currentIndex] && instances[currentIndex].file}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5>Label</h5>\r\n\t\t\t\t\t\t\t<p>{label}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"checkboxes\">\r\n\t\t\t\t{labels.map((element, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className=\"checkbox\">\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\t\t\tchecked={Boolean((label===null?0:label) & (1<<idx))}\r\n\t\t\t\t\t\t\t\tonChange={handleCheckboxChange(idx)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{element}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<button id=\"submit-button\" onClick={handleSubmit} disabled={label===null}>保存</button>\r\n\t\t\t<div className=\"paginator\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={handleIncrement(-1)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#10094;\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</span>\r\n\t\t\t\t{Array.from(Array(5).keys()).map(\r\n\t\t\t\t\titem => item + Math.min(instances.length-1-item, Math.max(currentIndex-2, 0))).filter(\r\n\t\t\t\t\t\titem => (item >= 0 && item < instances.length)\r\n\t\t\t\t\t\t).map((item, idx) => (\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={handlePageChange(item)} \r\n\t\t\t\t\t\t\tstyle={item===currentIndex ? {color: \"blue\"} : {}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t))}\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={handleIncrement(1)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#10095;\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span><button onClick={handleConfirm}>确认良性</button></span>\r\n\t\t\t\t<span></span>\r\n\t\t\t\t<span><button onClick={handleJumpClick}>跳转</button></span>\r\n\t\t\t\t<span><input type=\"text\" value={jumpInput} onChange={handleJumpInputChange} /></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LabelingView\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from '../../logo.svg'\r\nimport './index.css'\r\n\r\nconst Header: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"topbar\">\r\n\t\t\t<img src={logo} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport DatasetListView from './pages/dataset';\nimport LabelingView from './pages/labeling'\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <BrowserRouter>\n        <Route path=\"/dataset\" component={ DatasetListView } />\n        <Route path=\"/\" component={ LabelingView } />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}